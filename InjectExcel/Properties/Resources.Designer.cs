//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InjectExcel.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("InjectExcel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * CoffeeScript Compiler v1.7.1
        /// * http://coffeescript.org
        /// *
        /// * Copyright 2011, Jeremy Ashkenas
        /// * Released under the MIT License
        /// */
        ///(function(root){var CoffeeScript=function(){function require(e){return require[e]}return require[&quot;./helpers&quot;]=function(){var e={},t={exports:e};return function(){var t,n,i,r,s,o,a;e.starts=function(e,t,n){return t===e.substr(n,t.length)},e.ends=function(e,t,n){var i;return i=t.length,t===e.substr(e.length-i-(n||0),i)},e.repeat=s=function(e,t){var n;for(n=&quot;&quot;;t&gt;0;)1&amp;t&amp;&amp;(n+ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string coffee_script {
            get {
                return ResourceManager.GetString("coffee_script", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///&quot;Adjustments&quot;: { 
        ///	&quot;type&quot;: &quot;dispatch&quot;, 
        ///	&quot;members&quot;: {
        ///		&quot;QueryInterface&quot;: { &quot;type&quot;:&quot;void&quot;, &quot;flags&quot;: 4 },
        ///		&quot;AddRef&quot;: { &quot;type&quot;:&quot;uint&quot;, &quot;flags&quot;: 4 },
        ///		&quot;GetIDsOfNames&quot;: { &quot;type&quot;:&quot;void&quot;, &quot;flags&quot;: 4 },
        ///		&quot;Release&quot;: { &quot;type&quot;:&quot;uint&quot;, &quot;flags&quot;: 4 },
        ///		&quot;GetTypeInfoCount&quot;: { &quot;type&quot;:&quot;void&quot;, &quot;flags&quot;: 4 },
        ///		&quot;Application&quot;: { &quot;type&quot;:&quot;IDispatch&quot;, &quot;flags&quot;: 1 },
        ///		&quot;GetTypeInfo&quot;: { &quot;type&quot;:&quot;void&quot;, &quot;flags&quot;: 4 },
        ///		&quot;Invoke&quot;: { &quot;type&quot;:&quot;void&quot;, &quot;flags&quot;: 4 },
        ///		&quot;Creator&quot;: { &quot;type&quot;:&quot;int&quot;, &quot;flags&quot;: 1 },
        ///		&quot;Parent&quot;: { &quot;type&quot;:&quot;IDispa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string excel_interface {
            get {
                return ResourceManager.GetString("excel_interface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;console&quot;: { 
        ///		&quot;type&quot;: &quot;user&quot;, 
        ///		&quot;members&quot;: {
        ///		    &quot;log&quot;: { type:&quot;void&quot;, flags: 4 },
        ///		    &quot;info&quot;: { type:&quot;void&quot;, flags: 4 }
        ///        }
        ///	}
        ///}
        ///.
        /// </summary>
        internal static string extra_functions {
            get {
                return ResourceManager.GetString("extra_functions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;ScintillaNET&gt;
        ///	&lt;Language Name=&quot;js&quot;&gt;
        ///    
        ///      &lt;Styles&gt;
        ///			&lt;Style Name=&quot;Default&quot; FontName=&quot;Consolas&quot;/&gt;
        ///		&lt;/Styles&gt;
        ///        
        ///		&lt;AutoComplete FillUpCharacters=&quot;.([&quot; SingleLineAccept=&quot;True&quot; IsCaseSensitive=&quot;False&quot;&gt;
        ///			&lt;List&gt;
        ///				abstract boolean break byte case catch char class const continue debugger default delete do double
        ///				else enum export extends false final finally float for function goto if implements import in
        ///				instanceof int interface long nati [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string js {
            get {
                return ResourceManager.GetString("js", resourceCulture);
            }
        }
    }
}
